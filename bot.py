import logging
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, ContextTypes, ConversationHandler, MessageHandler, filters
import os
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π
LOCATION, TRAVEL, ELEMENT, EVENING, ENVIRONMENT, RESULT = range(6)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    reply_keyboard = [['–í –ª–µ—Å—É üå≤', '–£ –º–æ—Ä—è üåä', '–í –≥–æ—Ä–∞—Ö ‚õ∞Ô∏è']]
    await update.message.reply_text(
        '–ì–¥–µ —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è?',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True),
    )
    return LOCATION

async def location(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['LOCATION'] = update.message.text
    reply_keyboard = [['–ü–µ—à–∫–æ–º üö∂', '–ù–∞ –∫–æ—Ä–∞–±–ª–µ ‚õµ', '–ù–∞ –∫–æ–Ω–µ üê¥']]
    await update.message.reply_text(
        '–ö–∞–∫ —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å?',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True),
    )
    return TRAVEL

async def travel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['TRAVEL'] = update.message.text
    reply_keyboard = [['–û–≥–æ–Ω—å üî•', '–í–æ–¥–∞ üíß', '–í–æ–∑–¥—É—Ö üí®']]
    await update.message.reply_text(
        '–ö–∞–∫–æ–π —ç–ª–µ–º–µ–Ω—Ç —Ç–µ–±—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç?',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True),
    )
    return ELEMENT

async def element(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['ELEMENT'] = update.message.text
    reply_keyboard = [['–ß–∏—Ç–∞—Ç—å üìö', '–ó–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –ø—Ä–∏—Ä–æ–¥–µ üåø', '–ò–∑–æ–±—Ä–µ—Ç–∞—Ç—å üõ†Ô∏è']]
    await update.message.reply_text(
        '–ß—Ç–æ —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å –¥–µ–ª–∞—Ç—å –≤–µ—á–µ—Ä–æ–º?',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True),
    )
    return EVENING

async def evening(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['EVENING'] = update.message.text
    reply_keyboard = [['–í –±–∏–±–ª–∏–æ—Ç–µ–∫–µ üìñ', '–í –≥–æ—Ä–æ–¥–µ üèôÔ∏è', '–í –ø—Ä–∏—Ä–æ–¥–µ üèûÔ∏è']]
    await update.message.reply_text(
        '–í –∫–∞–∫–æ–π —Å—Ä–µ–¥–µ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–±—è –∫–∞–∫ –¥–æ–º–∞?',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True),
    )
    return ENVIRONMENT

async def environment(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['ENVIRONMENT'] = update.message.text
    # –ó–¥–µ—Å—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞–Ω–∞–ª–∏–∑ –æ—Ç–≤–µ—Ç–æ–≤ –∏ –≤—ã–±–∏—Ä–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    # –ü—Ä–∏–º–µ—Ä –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç–≤–µ—Ç–æ–≤ (—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∞—à–µ–π –ª–æ–≥–∏–∫–∏)
    result = analyze_answers(context.user_data)
    photo_path = get_photo_path_based_on_result(result)
    await update.message.reply_photo(photo=open(photo_path, 'rb'), caption=result)
    return ConversationHandler.END
def analyze_answers(answers):
    race = ""
    travel = ""
    element = ""
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞—Å—ã
    if answers['LOCATION'] == '–í –ª–µ—Å—É üå≤':
        race = "–≠–ª—å—Ñ"
    elif answers['LOCATION'] == '–£ –º–æ—Ä—è üåä':
        race = "–ß–µ–ª–æ–≤–µ–∫"
    elif answers['LOCATION'] == '–í –≥–æ—Ä–∞—Ö ‚õ∞Ô∏è':
        race = "–î–≤–∞—Ä—Ñ"

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ø–æ—Å–æ–±–∞ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è
    if answers['TRAVEL'] == '–ü–µ—à–∫–æ–º üö∂':
        travel = "–°–ª–µ–¥–æ–ø—ã—Ç"
    elif answers['TRAVEL'] == '–ù–∞ –∫–æ—Ä–∞–±–ª–µ ‚õµ':
        travel = "–ú–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª—å"
    elif answers['TRAVEL'] == '–ù–∞ –∫–æ–Ω–µ üê¥':
        travel = "–í—Å–∞–¥–Ω–∏–∫"

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    if answers['ELEMENT'] == '–û–≥–æ–Ω—å üî•':
        element = "–ú–∞–≥ –æ–≥–Ω—è"
    elif answers['ELEMENT'] == '–í–æ–¥–∞ üíß':
        element = "–ú–∞–≥ –≤–æ–¥—ã"
    elif answers['ELEMENT'] == '–í–æ–∑–¥—É—Ö üí®':
        element = "–ú–∞–≥ –≤–æ–∑–¥—É—Ö–∞"

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    class_name = f"{race} {travel} {element}"
    descriptions = {
    "–≠–ª—å—Ñ –°–ª–µ–¥–æ–ø—ã—Ç –ú–∞–≥ –æ–≥–Ω—è": "–õ–µ—Å–Ω–æ–π –°—Ç—Ä–∞–Ω–Ω–∏–∫, –º–∞—Å—Ç–µ—Ä –≤—ã–∂–∏–≤–∞–Ω–∏—è –∏ –º–∞–≥–∏–∏ –æ–≥–Ω—è, —Å–ø–æ—Å–æ–±–Ω—ã–π –ø—Ä–∏–∑–≤–∞—Ç—å –ø–ª–∞–º—è –¥–∞–∂–µ –≤ —Å–∞–º–æ–º –≥–ª—É—Ö–æ–º –ª–µ—Å—É.",
    "–≠–ª—å—Ñ –°–ª–µ–¥–æ–ø—ã—Ç –ú–∞–≥ –≤–æ–¥—ã": "–•—Ä–∞–Ω–∏—Ç–µ–ª—å –†—É—á—å–µ–≤, –∏—Å–∫—É—Å–Ω—ã–π —Å–ª–µ–¥–æ–ø—ã—Ç, —á—å–∏ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è –≤–æ–¥—ã –º–æ–≥—É—Ç –∏—Å—Ü–µ–ª—è—Ç—å –∏ –∑–∞—â–∏—â–∞—Ç—å.",
    "–≠–ª—å—Ñ –°–ª–µ–¥–æ–ø—ã—Ç –ú–∞–≥ –≤–æ–∑–¥—É—Ö–∞": "–í–µ—Å—Ç–Ω–∏–∫ –í–µ—Ç—Ä–æ–≤, –ª–æ–≤–∫–∏–π –∏ –±—ã—Å—Ç—Ä—ã–π, —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –≤–µ—Ç—Ä–∞–º–∏ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π.",
    "–≠–ª—å—Ñ –ú–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª—å –ú–∞–≥ –æ–≥–Ω—è": "–ü—É—Ç–µ—à–µ—Å—Ç–≤—É–µ—Ç –ø–æ –º–æ—Ä—è–º –Ω–∞ –∫–æ—Ä–∞–±–ª–µ, —É–ø—Ä–∞–≤–ª—è–µ–º–æ–º –º–∞–≥–∏–µ–π –æ–≥–Ω—è, –∏—Å—Å–ª–µ–¥—É—è –¥–∞–ª—å–Ω–∏–µ –∑–µ–º–ª–∏.",
    "–≠–ª—å—Ñ –ú–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª—å –ú–∞–≥ –≤–æ–¥—ã": "–ì–∞—Ä–º–æ–Ω–∏—á–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å –º–æ—Ä–µ–º, —É–ø—Ä–∞–≤–ª—è—è –≤–æ–ª–Ω–∞–º–∏ –∏ —Ç–µ—á–µ–Ω–∏—è–º–∏ –Ω–∞ —Å–≤–æ—ë —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.",
    "–≠–ª—å—Ñ –ú–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª—å –ú–∞–≥ –≤–æ–∑–¥—É—Ö–∞": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∏–ª—É –≤–µ—Ç—Ä–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–≤–æ–∏–º –ø–∞—Ä—É—Å–Ω–∏–∫–æ–º.",
    "–≠–ª—å—Ñ –í—Å–∞–¥–Ω–∏–∫ –ú–∞–≥ –æ–≥–Ω—è": "–í–µ—Ä—Ö–æ–≤–æ–π –≤–æ–∏–Ω, —Å–ø–æ—Å–æ–±–Ω—ã–π –ø—Ä–∏–∑—ã–≤–∞—Ç—å –æ–≥–Ω–µ–Ω–Ω—ã—Ö –∫–æ–Ω–µ–π –∏–∑ –¥—Ä—É–≥–æ–≥–æ –∏–∑–º–µ—Ä–µ–Ω–∏—è.",
    "–≠–ª—å—Ñ –í—Å–∞–¥–Ω–∏–∫ –ú–∞–≥ –≤–æ–¥—ã": "–ï–≥–æ –≤–µ—Ä–Ω—ã–π —Å–∫–∞–∫—É–Ω –º–æ–∂–µ—Ç –ø–µ—Ä–µ—Å–µ–∫–∞—Ç—å –≤–æ–¥–Ω—ã–µ –ø—Ä–µ–≥—Ä–∞–¥—ã –±–µ–∑ —É—Å–∏–ª–∏–π, –±–ª–∞–≥–æ–¥–∞—Ä—è –º–∞–≥–∏–∏ –≤–æ–¥—ã.",
    "–≠–ª—å—Ñ –í—Å–∞–¥–Ω–∏–∫ –ú–∞–≥ –≤–æ–∑–¥—É—Ö–∞": "–°–∫–æ—Ä–æ—Å—Ç—å –∏ –ª–µ–≥–∫–æ—Å—Ç—å ‚Äì –µ–≥–æ –≥–ª–∞–≤–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞, –æ–Ω —Å–ø–æ—Å–æ–±–µ–Ω –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞—Ç—å –ª—é–±—ã–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è.",
    "–ß–µ–ª–æ–≤–µ–∫ –°–ª–µ–¥–æ–ø—ã—Ç –ú–∞–≥ –æ–≥–Ω—è": "–ò—Å—Å–ª–µ–¥—É–µ—Ç –∑–µ–º–ª–∏, –∏—Å–ø–æ–ª—å–∑—É—è —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –æ–≥–Ω—è –¥–ª—è –≤—ã–∂–∏–≤–∞–Ω–∏—è –≤ –¥–∏–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö.",
    "–ß–µ–ª–æ–≤–µ–∫ –°–ª–µ–¥–æ–ø—ã—Ç –ú–∞–≥ –≤–æ–¥—ã": "–ù–∞—Ö–æ–¥–∏—Ç –≤–æ–¥—É –≤ –ª—é–±–æ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É—è –º–∞–≥–∏—é –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.",
    "–ß–µ–ª–æ–≤–µ–∫ –°–ª–µ–¥–æ–ø—ã—Ç –ú–∞–≥ –≤–æ–∑–¥—É—Ö–∞": "–õ–µ–≥–∫–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –∏—Å–ø–æ–ª—å–∑—É—è –ø–æ—Ç–æ–∫–∏ –≤–æ–∑–¥—É—Ö–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π.",
    "–ß–µ–ª–æ–≤–µ–∫ –ú–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª—å –ú–∞–≥ –æ–≥–Ω—è": "–û—Ç–≤–∞–∂–Ω—ã–π –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫, –æ—Å–≤–µ—â–∞—é—â–∏–π —Å–≤–æ–π –ø—É—Ç—å —Ñ–∞–∫–µ–ª–∞–º–∏ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–≥–Ω—è.",
    "–ß–µ–ª–æ–≤–µ–∫ –ú–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª—å –ú–∞–≥ –≤–æ–¥—ã": "–ú–æ—Ä—Å–∫–æ–π –≤–æ–ª–∫, —Å–ø–æ—Å–æ–±–Ω—ã–π —É–∫—Ä–æ—â–∞—Ç—å —à—Ç–æ—Ä–º—ã –∏ –≤—ã–∑—ã–≤–∞—Ç—å —Ç–∏—Ö—É—é –ø–æ–≥–æ–¥—É.",
    "–ß–µ–ª–æ–≤–µ–∫ –ú–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª—å –ú–∞–≥ –≤–æ–∑–¥—É—Ö–∞": "–ú–∞—Å—Ç–µ—Ä –ø–∞—Ä—É—Å–Ω–æ–≥–æ —Å–ø–æ—Ä—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π –≤–µ—Ç—Ä–∞ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–µ–≤–∏–¥–∞–Ω–Ω—ã—Ö —Å–∫–æ—Ä–æ—Å—Ç–µ–π.",
    "–ß–µ–ª–æ–≤–µ–∫ –í—Å–∞–¥–Ω–∏–∫ –ú–∞–≥ –æ–≥–Ω—è": "–•—Ä–∞–±—Ä—ã–π —Ä—ã—Ü–∞—Ä—å, –≤–æ–æ—Ä—É–∂–µ–Ω–Ω—ã–π –æ–≥–Ω–µ–Ω–Ω—ã–º –º–µ—á–æ–º –∏ –Ω–µ –∑–Ω–∞—é—â–∏–π —Å—Ç—Ä–∞—Ö–∞ –ø–µ—Ä–µ–¥ –ª–∏—Ü–æ–º –æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
    "–ß–µ–ª–æ–≤–µ–∫ –í—Å–∞–¥–Ω–∏–∫ –ú–∞–≥ –≤–æ–¥—ã": "–°–ø–æ—Å–æ–±–µ–Ω –ø–µ—Ä–µ—Å–µ–∫–∞—Ç—å –±—É—Ä–Ω—ã–µ —Ä–µ–∫–∏ –∏ –æ–∑–µ—Ä–∞ –Ω–∞ —Å–≤–æ–µ–º –≤–µ—Ä–Ω–æ–º —Å–∫–∞–∫—É–Ω–µ, –∫–∞–∫ –ø–æ —Å—É—à–µ.",
    "–ß–µ–ª–æ–≤–µ–∫ –í—Å–∞–¥–Ω–∏–∫ –ú–∞–≥ –≤–æ–∑–¥—É—Ö–∞": "–ü—Ä—ã–≥–∞–µ—Ç –≤—ã—à–µ –∏ –¥–∞–ª—å—à–µ –≤—Å–µ—Ö, –µ–≥–æ –∫–æ–Ω—å –∫–∞–∂–µ—Ç—Å—è –ø–æ—á—Ç–∏ –Ω–µ–≤–µ—Å–æ–º—ã–º –ø—Ä–∏ —Å–∫–∞—á–∫–µ.",
    "–î–≤–∞—Ä—Ñ –°–ª–µ–¥–æ–ø—ã—Ç –ú–∞–≥ –æ–≥–Ω—è": "–û—Ç–≤–∞–∂–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∑–µ–º–µ–ª–∏–π, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π –æ–≥–æ–Ω—å –¥–ª—è –æ—Å–≤–µ—â–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –ø—É—Ç–∏.",
    "–î–≤–∞—Ä—Ñ –°–ª–µ–¥–æ–ø—ã—Ç –ú–∞–≥ –≤–æ–¥—ã": "–ù–∞—Ö–æ–¥–∏—Ç –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–æ–¥–∑–µ–º–Ω—ã–µ –≤–æ–¥—ã, —Å–æ–∑–¥–∞–≤–∞—è –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–∏—Ç—å–µ–≤–æ–π –≤–æ–¥—ã –¥–ª—è —Å–≤–æ–∏—Ö —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π.",
    "–î–≤–∞—Ä—Ñ –°–ª–µ–¥–æ–ø—ã—Ç –ú–∞–≥ –≤–æ–∑–¥—É—Ö–∞": "–£–º–µ–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –≤—ã—Ö–æ–¥ –∏–∑ –ª—é–±—ã—Ö –ø–µ—â–µ—Ä, —á—É–≤—Å—Ç–≤—É—è —Å–∫–≤–æ–∑–Ω—è–∫–∏ –∏ –ø–æ—Ç–æ–∫–∏ –≤–æ–∑–¥—É—Ö–∞.",
    "–î–≤–∞—Ä—Ñ –ú–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª—å –ú–∞–≥ –æ–≥–Ω—è": "–†–µ–¥–∫–æ—Å—Ç—å —Å—Ä–µ–¥–∏ –¥–≤–∞—Ä—Ñ–æ–≤, –µ–≥–æ –∫–æ—Ä–∞–±–ª—å –∏–∑–≤–µ—Å—Ç–µ–Ω –∫–∞–∫ '–ü–ª—ã–≤—É—â–∏–π –≤—É–ª–∫–∞–Ω'.",
    "–î–≤–∞—Ä—Ñ –ú–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª—å –ú–∞–≥ –≤–æ–¥—ã": "–°—Ç—Ä–æ–∏—Ç –Ω–µ–ø–æ—Ç–æ–ø–ª—è–µ–º—ã–µ –∫–æ—Ä–∞–±–ª–∏, –∏—Å–ø–æ–ª—å–∑—É—è –º–∞–≥–∏—é –≤–æ–¥—ã –¥–ª—è –∏—Ö –∑–∞—â–∏—Ç—ã.",
    "–î–≤–∞—Ä—Ñ –ú–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª—å –ú–∞–≥ –≤–æ–∑–¥—É—Ö–∞": "–°–æ–∑–¥–∞–µ—Ç –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä—É—Å–∞, –∫–æ—Ç–æ—Ä—ã–µ –∞–¥–∞–ø—Ç–∏—Ä—É—é—Ç—Å—è –∫ –ª—é–±—ã–º –≤–µ—Ç—Ä–∞–º.",
    "–î–≤–∞—Ä—Ñ –í—Å–∞–¥–Ω–∏–∫ –ú–∞–≥ –æ–≥–Ω—è": "–ï–≥–æ –±–æ–µ–≤–æ–π –∫–∞—Ä–∞–±–∏–Ω —Å—Ç—Ä–µ–ª—è–µ—Ç –æ–≥–Ω–µ–Ω–Ω—ã–º–∏ —à–∞—Ä–∞–º–∏, –ø–æ—Ä–∞–∂–∞—è –≤—Ä–∞–≥–æ–≤ –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏.",
    "–î–≤–∞—Ä—Ñ –í—Å–∞–¥–Ω–∏–∫ –ú–∞–≥ –≤–æ–¥—ã": "–°–ø–æ—Å–æ–±–µ–Ω –≤—ã–∑—ã–≤–∞—Ç—å –¥–æ–∂–¥—å, –∫–æ—Ç–æ—Ä—ã–π –≥–∞—Å–∏—Ç –æ–≥–æ–Ω—å –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–∏–ª—ã.",
    "–î–≤–∞—Ä—Ñ –í—Å–∞–¥–Ω–∏–∫ –ú–∞–≥ –≤–æ–∑–¥—É—Ö–∞": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–µ—Ç–µ—Ä –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –º–∞–Ω–µ–≤—Ä–µ–Ω–Ω–æ—Å—Ç–∏ —Å–≤–æ–µ–≥–æ –±–æ–µ–≤–æ–≥–æ –º–æ–ª–æ—Ç–∞."
    }

    
    return descriptions.get(class_name, "–û—Ç—à–µ–ª—å–Ω–∏–∫, –∏—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π –∏ –∑–Ω–∞–Ω–∏–π")


def get_photo_path_based_on_result(result):
    images = {
    "–õ–µ—Å–Ω–æ–π –°—Ç—Ä–∞–Ω–Ω–∏–∫, –º–∞—Å—Ç–µ—Ä –≤—ã–∂–∏–≤–∞–Ω–∏—è –∏ –º–∞–≥–∏–∏ –æ–≥–Ω—è, —Å–ø–æ—Å–æ–±–Ω—ã–π –ø—Ä–∏–∑–≤–∞—Ç—å –ø–ª–∞–º—è –¥–∞–∂–µ –≤ —Å–∞–º–æ–º –≥–ª—É—Ö–æ–º –ª–µ—Å—É.": "forest_strider.png",
    "–•—Ä–∞–Ω–∏—Ç–µ–ª—å –†—É—á—å–µ–≤, –∏—Å–∫—É—Å–Ω—ã–π —Å–ª–µ–¥–æ–ø—ã—Ç, —á—å–∏ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è –≤–æ–¥—ã –º–æ–≥—É—Ç –∏—Å—Ü–µ–ª—è—Ç—å –∏ –∑–∞—â–∏—â–∞—Ç—å.": "stream_keeper.png",
    "–í–µ—Å—Ç–Ω–∏–∫ –í–µ—Ç—Ä–æ–≤, –ª–æ–≤–∫–∏–π –∏ –±—ã—Å—Ç—Ä—ã–π, —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –≤–µ—Ç—Ä–∞–º–∏ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π.": "wind_herald.png",
    "–ü—É—Ç–µ—à–µ—Å—Ç–≤—É–µ—Ç –ø–æ –º–æ—Ä—è–º –Ω–∞ –∫–æ—Ä–∞–±–ª–µ, —É–ø—Ä–∞–≤–ª—è–µ–º–æ–º –º–∞–≥–∏–µ–π –æ–≥–Ω—è, –∏—Å—Å–ª–µ–¥—É—è –¥–∞–ª—å–Ω–∏–µ –∑–µ–º–ª–∏.": "fire_sailor.png",
    "–ì–∞—Ä–º–æ–Ω–∏—á–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å –º–æ—Ä–µ–º, —É–ø—Ä–∞–≤–ª—è—è –≤–æ–ª–Ω–∞–º–∏ –∏ —Ç–µ—á–µ–Ω–∏—è–º–∏ –Ω–∞ —Å–≤–æ—ë —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.": "water_sailor.png",
    "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∏–ª—É –≤–µ—Ç—Ä–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–≤–æ–∏–º –ø–∞—Ä—É—Å–Ω–∏–∫–æ–º.": "air_sailor.png",
    "–í–µ—Ä—Ö–æ–≤–æ–π –≤–æ–∏–Ω, —Å–ø–æ—Å–æ–±–Ω—ã–π –ø—Ä–∏–∑—ã–≤–∞—Ç—å –æ–≥–Ω–µ–Ω–Ω—ã—Ö –∫–æ–Ω–µ–π –∏–∑ –¥—Ä—É–≥–æ–≥–æ –∏–∑–º–µ—Ä–µ–Ω–∏—è.": "fire_rider.png",
    "–ï–≥–æ –≤–µ—Ä–Ω—ã–π —Å–∫–∞–∫—É–Ω –º–æ–∂–µ—Ç –ø–µ—Ä–µ—Å–µ–∫–∞—Ç—å –≤–æ–¥–Ω—ã–µ –ø—Ä–µ–≥—Ä–∞–¥—ã –±–µ–∑ —É—Å–∏–ª–∏–π, –±–ª–∞–≥–æ–¥–∞—Ä—è –º–∞–≥–∏–∏ –≤–æ–¥—ã.": "water_rider.png",
    "–°–∫–æ—Ä–æ—Å—Ç—å –∏ –ª–µ–≥–∫–æ—Å—Ç—å ‚Äì –µ–≥–æ –≥–ª–∞–≤–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞, –æ–Ω —Å–ø–æ—Å–æ–±–µ–Ω –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞—Ç—å –ª—é–±—ã–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è.": "air_rider.png",
    "–ò—Å—Å–ª–µ–¥—É–µ—Ç –∑–µ–º–ª–∏, –∏—Å–ø–æ–ª—å–∑—É—è —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –æ–≥–Ω—è –¥–ª—è –≤—ã–∂–∏–≤–∞–Ω–∏—è –≤ –¥–∏–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö.": "fire_explorer.png",
    "–ù–∞—Ö–æ–¥–∏—Ç –≤–æ–¥—É –≤ –ª—é–±–æ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É—è –º–∞–≥–∏—é –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.": "water_explorer.png",
    "–õ–µ–≥–∫–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –∏—Å–ø–æ–ª—å–∑—É—è –ø–æ—Ç–æ–∫–∏ –≤–æ–∑–¥—É—Ö–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π.": "air_explorer.png",
    "–û—Ç–≤–∞–∂–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∑–µ–º–µ–ª–∏–π, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π –æ–≥–æ–Ω—å –¥–ª—è –æ—Å–≤–µ—â–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –ø—É—Ç–∏.": "dwarf_fire_pathfinder.png",
    "–ù–∞—Ö–æ–¥–∏—Ç –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–æ–¥–∑–µ–º–Ω—ã–µ –≤–æ–¥—ã, —Å–æ–∑–¥–∞–≤–∞—è –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–∏—Ç—å–µ–≤–æ–π –≤–æ–¥—ã –¥–ª—è —Å–≤–æ–∏—Ö —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π.": "dwarf_water_pathfinder.png",
    "–£–º–µ–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –≤—ã—Ö–æ–¥ –∏–∑ –ª—é–±—ã—Ö –ø–µ—â–µ—Ä, —á—É–≤—Å—Ç–≤—É—è —Å–∫–≤–æ–∑–Ω—è–∫–∏ –∏ –ø–æ—Ç–æ–∫–∏ –≤–æ–∑–¥—É—Ö–∞.": "dwarf_air_pathfinder.png",
    "–†–µ–¥–∫–æ—Å—Ç—å —Å—Ä–µ–¥–∏ –¥–≤–∞—Ä—Ñ–æ–≤, –µ–≥–æ –∫–æ—Ä–∞–±–ª—å –∏–∑–≤–µ—Å—Ç–µ–Ω –∫–∞–∫ '–ü–ª—ã–≤—É—â–∏–π –≤—É–ª–∫–∞–Ω'.": "dwarf_fire_sailor.png",
    "–°—Ç—Ä–æ–∏—Ç –Ω–µ–ø–æ—Ç–æ–ø–ª—è–µ–º—ã–µ –∫–æ—Ä–∞–±–ª–∏, –∏—Å–ø–æ–ª—å–∑—É—è –º–∞–≥–∏—é –≤–æ–¥—ã –¥–ª—è –∏—Ö –∑–∞—â–∏—Ç—ã.": "dwarf_water_sailor.png",
    "–°–æ–∑–¥–∞–µ—Ç –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä—É—Å–∞, –∫–æ—Ç–æ—Ä—ã–µ –∞–¥–∞–ø—Ç–∏—Ä—É—é—Ç—Å—è –∫ –ª—é–±—ã–º –≤–µ—Ç—Ä–∞–º.": "dwarf_air_sailor.png",
    "–ï–≥–æ –±–æ–µ–≤–æ–π –∫–∞—Ä–∞–±–∏–Ω —Å—Ç—Ä–µ–ª—è–µ—Ç –æ–≥–Ω–µ–Ω–Ω—ã–º–∏ —à–∞—Ä–∞–º–∏, –ø–æ—Ä–∞–∂–∞—è –≤—Ä–∞–≥–æ–≤ –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏.": "dwarf_fire_rider.png",
    "–°–ø–æ—Å–æ–±–µ–Ω –≤—ã–∑—ã–≤–∞—Ç—å –¥–æ–∂–¥—å, –∫–æ—Ç–æ—Ä—ã–π –≥–∞—Å–∏—Ç –æ–≥–æ–Ω—å –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–∏–ª—ã.": "dwarf_water_rider.png",
    "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–µ—Ç–µ—Ä –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –º–∞–Ω–µ–≤—Ä–µ–Ω–Ω–æ—Å—Ç–∏ —Å–≤–æ–µ–≥–æ –±–æ–µ–≤–æ–≥–æ –º–æ–ª–æ—Ç–∞.": "dwarf_air_rider.png"
    }
    default_image_path = "hermit.png"  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ 'hermit.png' –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ 'images'

    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –∏–∑ —Å–ª–æ–≤–∞—Ä—è, –µ—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç; –∏–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    image_path = images.get(result, default_image_path)
    
    # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    full_image_path = os.path.join(os.getcwd(), image_path)  # os.getcwd() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª –ø–æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º—É –ø—É—Ç–∏
    if not os.path.isfile(full_image_path):
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        image_path = default_image_path

    return image_path


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text('–û–ø—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω.', reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

def main() -> None:
    application = Application.builder().token("6564573865:AAFz0XogD4kPuoBsUqNq0PRbDs9ybn0i96E").build()
    
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            LOCATION: [MessageHandler(filters.TEXT & ~filters.COMMAND, location)],
            TRAVEL: [MessageHandler(filters.TEXT & ~filters.COMMAND, travel)],
            ELEMENT: [MessageHandler(filters.TEXT & ~filters.COMMAND, element)],
            EVENING: [MessageHandler(filters.TEXT & ~filters.COMMAND, evening)],
            ENVIRONMENT: [MessageHandler(filters.TEXT & ~filters.COMMAND, environment)],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    application.add_handler(conv_handler)
    application.run_polling()

if __name__ == '__main__':
    main()
